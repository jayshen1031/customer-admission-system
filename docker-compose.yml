version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: customer-rating-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-customer_rating_2024}
      MYSQL_DATABASE: ${DB_NAME:-customer_rating_system}
      MYSQL_USER: ${DB_USER:-app_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-app_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - customer-rating-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 应用服务
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: customer-rating-app
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-customer_rating_system}
      - DB_USER=${DB_USER:-app_user}
      - DB_PASSWORD=${DB_PASSWORD:-app_password}
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://${DB_USER:-app_user}:${DB_PASSWORD:-app_password}@mysql:3306/${DB_NAME:-customer_rating_system}?charset=utf8mb4
    ports:
      - "5001:5001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - customer-rating-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - app_logs:/app/logs

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: customer-rating-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - customer-rating-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local

networks:
  customer-rating-network:
    driver: bridge 